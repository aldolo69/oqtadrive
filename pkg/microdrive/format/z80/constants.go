/*
   OqtaDrive - Sinclair Microdrive emulator
   Copyright (c) 2021, Alexander Vollschwitz

   This file is part of OqtaDrive.

   The Z80toMDR code is based on Z80onMDR_Lite, copyright (c) 2021 Tom Dalby,
   ported from C to Go by Alexander Vollschwitz. For the original C code, refer
   to:

        https://github.com/TomDDG/Z80onMDR_lite

   OqtaDrive is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   OqtaDrive is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with OqtaDrive. If not, see <http://www.gnu.org/licenses/>.
*/

package z80

const Version = "v1"
const BGap = 128
const MaxLength = 256
const MinLength = 3

// --- 48k loader -------------------------------------------------------------
const ix48kBrd = 16
const ix48kPap = 22

var mdrBl48k = []byte{
	0x00, 0x00, 0x5e, 0x00, 0xfd, 0x30, 0x0e, 0x00, //(0)
	0x00, 0xff, 0x60, 0x00, 0x3a, 0xe7, 0xb0, 0x22, 0x30, 0x22, 0x3a, 0xda, 0xb0, 0x22, 0x30, 0x22, //(8) clear 24831
	0x3a, 0xfb, 0x3a, 0xf1, 0x64, 0x3d, 0xbe, 0x30, 0x0e, 0x00, 0x00, 0xd6, 0x5c, 0x00, 0x3a, 0xef, //(24)
	0x2a, 0x22, 0x6d, 0x22, 0x3b, 0x64, 0x3b, 0x22, 0x53, 0x22, 0xaf, 0x3a, 0xf9, 0xc0, 0x30, 0x0e, //(40)
	0x00, 0x00, 0x00, 0x62, 0x00, 0x3a, 0xef, 0x2a, 0x22, 0x6d, 0x22, 0x3b, 0x64, 0x3b, 0x22, 0x4d, //(56)
	0x22, 0xaf, 0x3a, 0xef, 0x2a, 0x22, 0x6d, 0x22, 0x3b, 0x64, 0x3b, 0x22, 0x4c, 0x22, 0xaf, 0x3a, //(72)
	0xf9, 0xc0, 0x30, 0x0e, 0x00, 0x00, 0x00, 0x40, 0x00, 0x0d, //(88)
}

// --- 128k loader ------------------------------------------------------------
const ix128kBrd = 16
const ix128kPap = 22

var mdrBl128k = []byte{
	0x00, 0x00, 0x8e, 0x00, 0xfd, 0x30, 0x0e, 0x00, //(0)
	0x00, 0xff, 0x60, 0x00, 0x3a, 0xe7, 0xb0, 0x22, 0x30, 0x22, 0x3a, 0xda, 0xb0, 0x22, 0x30, 0x22, //(8) clear 24831
	0x3a, 0xfb, 0x3a, 0xf9, 0xc0, 0x30, 0x0e, 0x00, 0x00, 0x9c, 0x5d, 0x00, 0x3a, 0xf1, 0x64, 0x3d, //(24) randomize usr 23964
	0xbe, 0x30, 0x0e, 0x00, 0x00, 0xd6, 0x5c, 0x00, 0x3a, 0xef, 0x2a, 0x22, 0x6d, 0x22, 0x3b, 0x64, //(40) let d=peek 23766
	0x3b, 0x22, 0x53, 0x22, 0xaf, 0x3a, 0xf9, 0xc0, 0x30, 0x0e, 0x00, 0x00, 0x00, 0x62, 0x00, 0x3a, //(56) randomize usr 25088
	0xeb, 0x69, 0x3d, 0xb0, 0x22, 0x31, 0x22, 0xcc, 0xb0, 0x22, 0x35, 0x22, 0x3a, 0xef, 0x2a, 0x22, //(72)
	0x6d, 0x22, 0x3b, 0x64, 0x3b, 0xc1, 0x69, 0xaf, 0x3a, 0xf9, 0xc0, 0x30, 0x0e, 0x00, 0x00, 0xb3, //(88) ransomize usr 32179
	0x7d, 0x00, 0x3a, 0xf3, 0x69, 0x3a, 0xef, 0x2a, 0x22, 0x6d, 0x22, 0x3b, 0x64, 0x3b, 0x22, 0x4d, //(104)
	0x22, 0xaf, 0x3a, 0xef, 0x2a, 0x22, 0x6d, 0x22, 0x3b, 0x64, 0x3b, 0x22, 0x4c, 0x22, 0xaf, 0x3a, //(120)
	0xf9, 0xc0, 0x30, 0x0e, 0x00, 0x00, 0x00, 0x40, 0x00, 0x0d, 0x27, 0x0f, 0x26, 0x00, 0xea, 0xf3, //(136) randomize usr 16384
	0x2a, 0x3d, 0x5c, 0x23, 0x36, 0x13, 0x2b, 0x36, 0x03, 0x2b, 0x36, 0x1b, 0x2b, 0x36, 0x76, 0x2b, //(152) usr 0 code
	0x36, 0x00, 0x2b, 0x36, 0x51, 0xf9, 0xfd, 0xcb, 0x01, 0xa6, 0x3e, 0x10, 0x01, 0xfd, 0x7f, 0xed, //(168)
	0x79, 0xfb, 0xc9, 0x0d, //(184)
}

// --- launcher ---------------------------------------------------------------
const ixRD = 2 // rdata default 0x4072 for 16384, so +114
const ixCP = 5 // compression pos
const ixCS = 8
const ixLCF = 63 // bdata default 0x4086 for 16384, so +134
const ixLCS = 66 // last copy size
const ixOUT = 74 // last out to 0x7ffd
const ixR = 96
const ixIM = 100
const ixSP = 102
const ixA = 105
const ixEI = 106
const ixJP = 108
const ixBCA = 114
const ixDEA = 116
const ixHLA = 118
const ixIX = 120
const ixIY = 122
const ixAFA = 124
const ixHL = 126
const ixDE = 128
const ixBC = 130
const ixIF = 132

const launchMDRFullLen = 134

var launchMDRFull = []byte{
	0xf3, 0x31, 0x72, 0x40, 0x21, 0x00, 0x00, 0x11, 0x00, 0x5b, 0x43, 0x18, 0x02, 0xed, 0xb0, 0x7e, //(0)
	0x23, 0x4f, 0x0c, 0x28, 0x29, 0xfe, 0x20, 0x38, 0xf4, 0xf5, 0xe6, 0xe0, 0x07, 0x07, 0x07, 0xfe, //(16)
	0x07, 0x20, 0x02, 0x86, 0x23, 0xc6, 0x02, 0x4f, 0x88, 0x91, 0x47, 0xf1, 0xe5, 0xc5, 0xe6, 0x1f, //(32)
	0x47, 0x4e, 0x62, 0x6b, 0x37, 0xed, 0x42, 0xc1, 0xed, 0xb0, 0xe1, 0x23, 0x18, 0xd1, //(48)
	0x21, 0x86, 0x40, 0x01, 0x03, 0x00, 0xed, 0xb0, //(62)
	0x01, 0xfd, 0x7f, 0x3e, 0x30, 0xed, 0x79, //(70)
	0xd9, 0xc1, 0xd1, //(77)
	0xe1, 0xd9, 0xdd, 0xe1, 0xfd, 0xe1, 0x08, 0xf1, 0x08, 0xe1, 0xd1, 0xc1, 0xf1, 0xed, 0x47, 0x3e, //(80)
	0x02, 0xed, 0x4f, 0xed, 0x5e, 0x31, 0x4d, 0xae, 0x3e, 0x00, 0xf3, 0xc3, 0xb7, 0xd9, 0x00, 0x00, //(96)
	0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x1a, 0xf8, 0xf1, 0xe3, 0x3a, 0x5c, 0x8a, 0x00, 0x4c, 0x10, //(112)
	0xcc, 0x43, 0x00, 0x00, 0x00, 0x02, //(128)
	// space for 128bytes of delta overflow, starts at 3
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
}

// --- compressed screen loader -----------------------------------------------
var scrLoad = []byte{
	0x21, 0x6d, 0x62, 0x11, 0x00, 0x58, 0x18, 0x11, 0x7e, 0x12, 0x14, 0x7a, 0xfe, 0x59, 0xd4, 0x5b, //0
	0x62, 0xe6, 0x07, 0xcc, 0x64, 0x62, 0x23, 0x10, 0xef, 0x7e, 0x23, 0x47, 0x04, 0xc8, 0xfe, 0x20, //16
	0x38, 0xe6, 0x4f, 0xe6, 0xe0, 0x07, 0x07, 0x07, 0xfe, 0x07, 0x20, 0x02, 0x86, 0x23, 0xc6, 0x02, //32
	0x47, 0xe5, 0x79, 0xe6, 0x1f, 0xc6, 0x40, 0x6e, 0x67, 0x7e, 0x12, 0x14, 0x7a, 0xfe, 0x59, 0xd4, //48
	0x5b, 0x62, 0xe6, 0x07, 0xcc, 0x64, 0x62, 0xeb, 0x14, 0x7a, 0xfe, 0x59, 0xd4, 0x5b, 0x62, 0xe6, //64
	0x07, 0xcc, 0x64, 0x62, 0xeb, 0x10, 0xe2, 0xe1, 0x23, 0x18, 0xbe, 0x3d, 0x07, 0x07, 0x07, 0xee, //80
	0x82, 0x57, 0x3c, 0xc9, 0xaa, 0x1f, 0x1f, 0x1f, 0xc6, 0x4f, 0x57, 0x13, 0xc9, //96 (109)
}

// --- unpacker for 128k pages ------------------------------------------------
var unpack = []byte{
	0xf3, 0x3a, 0xff, 0x7d, 0x01, 0xfd, 0x7f, 0xed, 0x79, 0x21, 0x00, 0x7e, 0x11, 0x00, 0xc0, 0x43,
	0x18, 0x02, 0xed, 0xb0, 0x7e, 0x23, 0x4f, 0x0c, 0x28, 0x29, 0xfe, 0x20, 0x38, 0xf4, 0xf5, 0xe6,
	0xe0, 0x07, 0x07, 0x07, 0xfe, 0x07, 0x20, 0x02, 0x86, 0x23, 0xc6, 0x02, 0x4f, 0x88, 0x91, 0x47,
	0xf1, 0xe5, 0xc5, 0xe6, 0x1f, 0x47, 0x4e, 0x62, 0x6b, 0x37, 0xed, 0x42, 0xc1, 0xed, 0xb0, 0xe1,
	0x23, 0x18, 0xd1, 0x3e, 0x10, 0x01, 0xfd, 0x7f, 0xed, 0x79, 0xfb, 0xc9, 0x11,
}
